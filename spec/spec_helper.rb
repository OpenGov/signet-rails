require 'signet/rails'
require 'sinatra/base'
require 'factory_girl'

Dir[File.dirname(__FILE__)+"/*factory.rb"].each {|file| require file }
Dir[File.dirname(__FILE__)+"/factories/*.rb"].each {|file| require file }

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # shortcut notation
  #config.include FactoryGirl::Syntax::Methods

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

# lightweight sinatra app for testing 
# wraps in Rack::Lint and puts the Signet::Rails::Handler in the middleware stack
def base_app opts = {}
  app = Rack::Lint.new FakeApp.new
  sr = Signet::Rails::Builder.new app do
    provider opts
  end
  Rack::Lint.new sr
end

def login_app opts = {}
  base_app opts.merge({type: :login})
end

DEFAULT_ENV = {
  "SERVER_NAME" => "myitcv.org.uk",
  "SERVER_PORT" => "4321"
}.freeze

def request app
  req = Rack::MockRequest.new app
end

def env opts = {}
  DEFAULT_ENV.dup.merge opts
end
